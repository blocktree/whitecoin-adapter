// Code generated by "stringer -type=AssetPermission"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AssetPermissionChargeMarketFee-1]
	_ = x[AssetPermissionWhiteList-2]
	_ = x[AssetPermissionOverrideAuthority-4]
	_ = x[AssetPermissionTransferRestricted-8]
	_ = x[AssetPermissionDisableForceSettle-16]
	_ = x[AssetPermissionGlobalSettle-32]
	_ = x[AssetPermissionDisableConfidential-64]
	_ = x[AssetPermissionWitnessFedAsset-128]
	_ = x[AssetPermissionComiteeFedAsset-256]
}

const (
	_AssetPermission_name_0 = "AssetPermissionChargeMarketFeeAssetPermissionWhiteList"
	_AssetPermission_name_1 = "AssetPermissionOverrideAuthority"
	_AssetPermission_name_2 = "AssetPermissionTransferRestricted"
	_AssetPermission_name_3 = "AssetPermissionDisableForceSettle"
	_AssetPermission_name_4 = "AssetPermissionGlobalSettle"
	_AssetPermission_name_5 = "AssetPermissionDisableConfidential"
	_AssetPermission_name_6 = "AssetPermissionWitnessFedAsset"
	_AssetPermission_name_7 = "AssetPermissionComiteeFedAsset"
)

var (
	_AssetPermission_index_0 = [...]uint8{0, 30, 54}
)

func (i AssetPermission) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _AssetPermission_name_0[_AssetPermission_index_0[i]:_AssetPermission_index_0[i+1]]
	case i == 4:
		return _AssetPermission_name_1
	case i == 8:
		return _AssetPermission_name_2
	case i == 16:
		return _AssetPermission_name_3
	case i == 32:
		return _AssetPermission_name_4
	case i == 64:
		return _AssetPermission_name_5
	case i == 128:
		return _AssetPermission_name_6
	case i == 256:
		return _AssetPermission_name_7
	default:
		return "AssetPermission(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
